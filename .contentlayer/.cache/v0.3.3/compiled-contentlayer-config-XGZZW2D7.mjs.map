{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\n\r\n// import remarkGfm from \"remark-gfm\";\r\n// import rehypePrettyCode from \"rehype-pretty-code\";\r\n// import rehypeSlug from \"rehype-slug\";\r\n// import rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\n// import rehypeCodeTitles from \"rehype-code-titles\";\r\n// import remarkExternalLinks from \"remark-external-links\";\r\n// import rehypePrism from \"rehype-prism-plus\";\r\n\r\nconst Post = defineDocumentType(() => ({\r\n  name: \"Post\",\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    author: { type: \"string\", required: true },\r\n    createdAt: { type: \"string\", required: true },\r\n    updatedAt: { type: \"string\", required: false },\r\n    description: { type: \"string\", required: true },\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (post) => post._raw.flattenedPath,\r\n    },\r\n  },\r\n}));\r\n\r\nconst rehypeoptions = {\r\n    // Use one of Shiki's packaged themes\r\n    theme: \"light-plus\",\r\n    // Set to true to keep the background color\r\n    keepBackground: true ,\r\n    onVisitLine(node) {\r\n      if (node.children.length === 0) {\r\n        node.children = [{ type: \"text\", value: \" \" }];\r\n      }\r\n    },\r\n    onVisitHighlightedLine(node) {\r\n      node.properties.className.push(\"highlighted\");\r\n    },\r\n    onVisitHighlightedWord(node, id) {\r\n      node.properties.className = [\"word\"];\r\n    },\r\n  };\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"./posts\",\r\n  documentTypes: [Post],\r\n  mdx: {\r\n    rehypePlugins: [[ehypePrettyCode, rehypeoptions]]\r\n  }\r\n  // mdx: {\r\n  //   remarkPlugins: [remarkGfm],\r\n  //   rehypePlugins: [\r\n  //     rehypeSlug,\r\n  //     rehypeCodeTitles,\r\n  //     [rehypePrism],\r\n  //     [rehypeAutolinkHeadings],\r\n  //     [\r\n  //       rehypePrettyCode,\r\n  //       {\r\n  //         theme: \"one-dark-pro\",\r\n  //         onVisitLine(node) {\r\n  //           // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n  //           // lines to be copy/pasted\r\n  //           if (node.children.length === 0) {\r\n  //             node.children = [{ type: \"text\", value: \" \" }];\r\n  //           }\r\n  //         },\r\n  //         onVisitHighlightedLine(node) {\r\n  //           node.properties.className.push(\"line--highlighted\");\r\n  //         },\r\n  //         onVisitHighlightedWord(node) {\r\n  //           node.properties.className = [\"word--highlighted\"];\r\n  //         },\r\n  //       },\r\n  //     ],\r\n  //   ],\r\n  // },\r\n});\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,sBAAsB;AAU7B,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,WAAW,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC7C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAChD;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK;AAAA,IAC/B;AAAA,EACF;AACF,EAAE;AAEF,IAAM,gBAAgB;AAAA;AAAA,EAElB,OAAO;AAAA;AAAA,EAEP,gBAAgB;AAAA,EAChB,YAAY,MAAM;AAChB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,uBAAuB,MAAM;AAC3B,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,uBAAuB,MAAM,IAAI;AAC/B,SAAK,WAAW,YAAY,CAAC,MAAM;AAAA,EACrC;AACF;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,CAAC,iBAAiB,aAAa,CAAC;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BF,CAAC;",
  "names": []
}
